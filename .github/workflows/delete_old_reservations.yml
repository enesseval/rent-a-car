name: Delete Old Reservations

on:
   schedule:
      - cron: "*/15 * * * *"
   workflow_dispatch:

jobs:
   delete-reservations:
      runs-on: ubuntu-latest
      steps:
         - name: Delete Old Unpaid Reservations and Capture Vehicle IDs
           id: delete_reservations
           run: |
              response=$(curl -X POST https://active-moccasin-54.hasura.app/v1/graphql \
              -H "Content-Type: application/json" \
              -H "x-hasura-admin-secret: ${{ secrets.HASURA_ADMIN_SECRET }}" \
              -d '{"query":"mutation deleteOldUnpaidReservations { delete_old_unpaid_reservations(where: {}) { returning { vehicle_id } } }"}')
              echo "vehicle_ids=$(echo $response | jq -r '.data.delete_old_unpaid_reservations.returning[].vehicle_id')" >> $GITHUB_ENV

         - name: Update Ended Reservations and Capture Vehicle IDs
           id: update_reservations
           run: |
              response=$(curl -X POST https://active-moccasin-54.hasura.app/v1/graphql \
              -H "Content-Type: application/json" \
              -H "x-hasura-admin-secret: ${{ secrets.HASURA_ADMIN_SECRET }}" \
              -d '{"query":"mutation updateEndedReservations { update_reservations(where: {end_date: {_lte: \"now()\"}, payment_status: {_eq: true}}, _set: {status: \"sona erdi\"}) { returning { vehicle_id } } }"}')
              echo "vehicle_ids=$(echo $response | jq -r '.data.update_reservations.returning[].vehicle_id')" >> $GITHUB_ENV

         - name: Update Vehicle Availability
           run: |
              for vehicle_id in ${{ env.vehicle_ids }}; do
                curl -X POST https://active-moccasin-54.hasura.app/v1/graphql \
                -H "Content-Type: application/json" \
                -H "x-hasura-admin-secret: ${{ secrets.HASURA_ADMIN_SECRET }}" \
                -d "{\"query\":\"mutation updateVehicleAvailability { update_vehicles(where: {id: {_eq: \\\"$vehicle_id\\\"}}, _set: {available: true}) { affected_rows } }\"}"
              done
